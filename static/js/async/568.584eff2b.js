"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["568"],{285:function(e,n,t){t.r(n),t.d(n,{default:function(){return s}});var i=t(651),a=t(6971);function r(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",ul:"ul",li:"li",h3:"h3",em:"em"},(0,a.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h1,{id:"introduction",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#introduction",children:"#"}),"Introduction"]}),"\n",(0,i.jsxs)(n.h2,{id:"what-is-filenest-and-who-is-it-for",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#what-is-filenest-and-who-is-it-for",children:"#"}),"What is Filenest and who is it for"]}),"\n",(0,i.jsx)(n.p,{children:"Filenest is a TypeScript library designed to seamlessly integrate a file manager into your app or admin dashboard.\nThis library is ideal for developers who:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Need to connect a file hosting provider to their app"}),"\n",(0,i.jsx)(n.li,{children:"Require a way to select images for database entities (e.g., articles)"}),"\n",(0,i.jsx)(n.li,{children:"Want to manage externally hosted files directly within their site"}),"\n"]}),"\n",(0,i.jsxs)(n.h2,{id:"background",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#background",children:"#"}),"Background"]}),"\n",(0,i.jsxs)(n.h3,{id:"tldr-sort-of",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#tldr-sort-of",children:"#"}),"tl;dr (sort of)"]}),"\n",(0,i.jsx)(n.p,{children:"Developers often choose to build their own admin dashboards instead of using a CMS for various reasons.\nEven when creating a simple blog backend, you may need to view, select,\nor manage images and other files \u2014 like selecting a header image for a blog article."}),"\n",(0,i.jsx)(n.p,{children:"While it's possible to use a simple text field to paste an image link,\nhaving a fully-featured media gallery, like those found in content management systems,\noffers a better user experience. However, implementing such functionality can be tedious and time-consuming."}),"\n",(0,i.jsx)(n.p,{children:"Filenest significantly reduces the effort required to build these features.\nBy using providers and adapters for your backend and frontend components for your UI,\nyou can easily integrate Filenest\u2019s asset management capabilities into your existing project.\nThis approach allows you to maintain full control over backend permissions and frontend styles."}),"\n",(0,i.jsxs)(n.h3,{id:"the-story-behind-it",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#the-story-behind-it",children:"#"}),"The story behind it"]}),"\n",(0,i.jsxs)(n.p,{children:["A personal project of mine (",(0,i.jsx)(n.a,{href:"https://github.com/nordowl",target:"_blank",rel:"noopener noreferrer",children:"@nordowl"}),"), with a custom backend,\nrequired a way to connect images to database entities. Let's just say they were blog articles.\nI needed some way to upload and manage images and be able to choose an image for each article.\nCloudinary turned out to be my file hoster of choice because of its generous free tier, SDK and web interface (#NotSponsored).\nA text field holding an image link would be the simplest to implement and would suffice for my articles -\nbut did I really want to open up Cloudinary everytime I wanted to copy an image URL? Nope."]}),"\n",(0,i.jsx)(n.p,{children:"And so I built some API routes to get my data from Cloudinary, and built a beautiful\ncustom file management component in React - tailored to my needs specifically.\nEverything worked well. I could fetch and display my remote images in my app and get all the file URLs.\nSome time passed and another project arose, which turned out to need a media library as well."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:'"Do I just copy everything over?"'})}),"\n",(0,i.jsx)(n.p,{children:"Yup. I copied all the API routes but redid and improved the React components.\nBeing halfway done I was wondering, what if I needed another file manager in the future?\nI couldn't be copying dozens of files everytime. I searched the web for a library\nthat fulfills my use case, but couldn't find one. And I thought\nI was probably not the only developer building custom dashboards that need an image / file manager."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:'"Might aswell turn this into a library."'})}),"\n",(0,i.jsx)(n.p,{children:"And this is why Filenest exist. It extends your existing API by adding a few endpoints,\nwhich the frontend components use to talk to your third party file hosting provider.\nMinimal backend setup required - and the components come unstyled,\nmeaning you can style them to your needs, matching the rest of your UI."}),"\n",(0,i.jsxs)(n.h2,{id:"try-out-filenest-now",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#try-out-filenest-now",children:"#"}),"Try out Filenest now"]}),"\n",(0,i.jsxs)(n.p,{children:["Check out the ",(0,i.jsx)(n.a,{href:"/docs/getting-started/quick-start.html",children:"quick start quide"}),"."]})]})}function o(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?(0,i.jsx)(n,Object.assign({},e,{children:(0,i.jsx)(r,e)})):r(e)}let s=o;o.__RSPRESS_PAGE_META={},o.__RSPRESS_PAGE_META["docs%2Fgetting-started%2Fintroduction.md"]={toc:[{id:"what-is-filenest-and-who-is-it-for",text:"What is Filenest and who is it for",depth:2},{id:"background",text:"Background",depth:2},{id:"tldr-sort-of",text:"tl;dr (sort of)",depth:3},{id:"the-story-behind-it",text:"The story behind it",depth:3},{id:"try-out-filenest-now",text:"Try out Filenest now",depth:2}],title:"Introduction",frontmatter:{}}}}]);